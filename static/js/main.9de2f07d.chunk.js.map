{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Feedback/Feedback.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Feedback","options","onLeaveFeedback","className","s","container","map","option","button","name","type","onClick","Notification","massage","message","defaultProps","Section","children","title","section","Statistics","positivePercentage","good","neutral","bad","total","item","result","App","state","countPositiveFeedbackPercentage","countTotalFeedback","Math","round","feedbackIncrease","e","setState","prevState","target","this","totalFeedback","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,iBCA3DD,EAAOC,QAAU,CAAC,OAAS,2B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,2B,oBCA3DD,EAAOC,QAAU,CAAC,QAAU,gC,qKCyBbC,MAvBf,YAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3B,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,OAEbC,KAAMF,EACNG,KAAK,SACLC,QAAST,EALX,SAOGK,GALIA,S,iBCNf,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGV,UAAWC,IAAEU,QAAhB,SAA0BD,IAGnCD,EAAaG,aAAe,CAC1BD,QAAS,IAOIF,Q,gBCEAI,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBD,M,gBCgBQG,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,mBAAoBC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,IAAKC,EAAS,EAATA,MAC5D,OACE,+BACE,qBAAItB,UAAWC,IAAEsB,KAAjB,mBAA8BJ,KAC9B,qBAAInB,UAAWC,IAAEsB,KAAjB,sBAAiCH,KACjC,qBAAIpB,UAAWC,IAAEsB,KAAjB,kBAA6BF,KAC7B,qBAAIrB,UAAWC,IAAEuB,OAAjB,oBAAiCF,KACjC,qBAAItB,UAAWC,IAAEuB,OAAjB,gCAA6CN,EAA7C,WCJAO,E,4MACJC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,gCAAkC,WAChC,IAAQR,EAAS,EAAKO,MAAdP,KACFG,EAAQ,EAAKM,qBACnB,OAAON,EAAQO,KAAKC,MAAOX,EAAOG,EAAS,KAAO,G,EAGpDM,mBAAqB,WACnB,MAA+B,EAAKF,MACpC,OADA,EAAQP,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBU,iBAAmB,SAAAC,GACjB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAO7B,KAAO4B,EAAUF,EAAEG,OAAO7B,MAAQ,O,4CAIhD,WACE,MAA+B8B,KAAKV,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgB,EAAgBD,KAAKR,qBAC3B,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAASwC,OAAOC,KAAKH,KAAKV,OAC1B3B,gBAAiBqC,KAAKL,qBAG1B,cAAC,EAAD,CAAShB,MAAM,aAAf,SACqB,IAAlBsB,EACC,cAAC,EAAD,CAAc1B,QAAS,sBAEvB,cAAC,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPnB,mBAAoBkB,KAAKT,6C,GA5CrBa,aAqDHf,ICtDfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9de2f07d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__ROLOE\",\"result\":\"Statistics_result__2lMQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__12HCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__36ENF\",\"section\":\"Section_section__14EEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__tKrNN\"};","import s from './Feedback.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Feedback({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.button}\r\n          key={option}\r\n          name={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedback.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default Feedback;\r\n","import s from './Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification({ massage }) {\r\n  return <p className={s.message}>{massage}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ positivePercentage, good, neutral, bad, total }) {\r\n  return (\r\n    <ul>\r\n      <li className={s.item}>Good: {good}</li>\r\n      <li className={s.item}>Neutral: {neutral}</li>\r\n      <li className={s.item}>Bad: {bad}</li>\r\n      <li className={s.result}>Total: {total}</li>\r\n      <li className={s.result}>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import Feedback from './components/Feedback/Feedback';\nimport React, { Component } from 'react';\nimport Notification from './components/Notification/Notification';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  feedbackIncrease = e => {\n    this.setState(prevState => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackIncrease}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback === 0 ? (\n            <Notification message={'No feedback given'} />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}